# Travis CI configuration file for Visvis
# Validate this at http://lint.travis-ci.org/

language: python

# use container-based infrastructure
sudo : false

# Only run travis build on push for master branch
branches:
  only:
    - master

matrix:
    include:
        - python: "3.6"
          env: TEST_UNIT=0 TEST_STYLE=1 TEST_DOCS=1
        #
        - python: "2.7"
          env: TEST_UNIT=1
        - python: "3.4"
          env: TEST_UNIT=1
        - python: "3.5"
          env: TEST_UNIT=1 TEST_INSTALL=1
        - python: "3.6"
          env: TEST_UNIT=1
        - python: "3.7"
          env: TEST_UNIT=1

before_install:
    - REDIRECT_TO=/dev/stdout  # change to /dev/null to silence Travis
    # Install miniconda
    - if [ "${TEST_UNIT}" == "1" ]; then
        wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
        chmod +x miniconda.sh;
        ./miniconda.sh -b -p ~/anaconda &> ${REDIRECT_TO};
        export PATH=~/anaconda/bin:$PATH;
        conda update --yes --quiet conda &> ${REDIRECT_TO};
      fi;
    - SRC_DIR=$(pwd)
    # file size checks
    - if [ "${TEST_STYLE}" == "1" ]; then
        if [ "${TRAVIS_PULL_REQUEST}" != "false" ]; then
          GIT_TARGET_EXTRA="+refs/heads/${TRAVIS_BRANCH}";
          GIT_SOURCE_EXTRA="+refs/pull/${TRAVIS_PULL_REQUEST}/merge";
        else
          GIT_TARGET_EXTRA="";
          GIT_SOURCE_EXTRA="";
        fi;
        cd ~;
        mkdir target-size-clone && cd target-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &>${REDIRECT_TO};
        git fetch origin ${GIT_TARGET_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        TARGET_SIZE=`du -s target-size-clone | sed -e "s/\t.*//"`;
        mkdir source-size-clone && cd source-size-clone;
        git init &> ${REDIRECT_TO} && git remote add -t ${TRAVIS_BRANCH} origin git://github.com/${TRAVIS_REPO_SLUG}.git &> ${REDIRECT_TO};
        git fetch origin ${GIT_SOURCE_EXTRA} &> ${REDIRECT_TO} && git checkout -qf FETCH_HEAD &> ${REDIRECT_TO} && cd ..;
        SOURCE_SIZE=`du -s source-size-clone | sed -e "s/\t.*//"`;
        if [ "${SOURCE_SIZE}" != "${TARGET_SIZE}" ]; then
          SIZE_DIFF=`expr ${SOURCE_SIZE} - ${TARGET_SIZE}`;
        else
          SIZE_DIFF=0;
        fi;
      fi;
    - cd ${SRC_DIR}

# Install dependencies
install:
    # Install Python with numpy
    - if [ "${TEST_UNIT}" == "1" ]; then
        conda create -n testenv --yes --quiet pip python=$TRAVIS_PYTHON_VERSION > ${REDIRECT_TO};
        source activate testenv > ${REDIRECT_TO};
        conda install --yes --quiet numpy > ${REDIRECT_TO};
        conda install --yes --quiet pillow -c conda-forge > ${REDIRECT_TO};
        pip install imageio;
        pip install pyopengl;
      fi;
    - if [ "${TEST_UNIT}" == "1" ]; then
        pip install pytest;
      fi;
    - if [ "${TEST_INSTALL}" == "1" ]; then
        python setup.py install;
      fi;
    - if [ "${TEST_DOCS}" == "1" ]; then
        pip install sphinx;
      fi;
    - if [ "${TEST_STYLE}" == "1" ]; then
        pip install pycodestyle;
        pip install flake8;
      fi;

before_script:
  # Enable fake display so that we can create windows
  # Does not work anymore
  #- "export DISPLAY=:99.0"
  #- "sh -e /etc/init.d/xvfb start"
  #- sleep 3 # give xvfb some time to start

# Run the tests
script:
    - cd ${SRC_DIR};
    - python -c "import sys; print(sys.version, '\n', sys.prefix)"
    - if [ "${TEST_UNIT}" == "1" ]; then
        python -m pytest .;
      fi;
    - if [ "${TEST_DOCS}" == "1" ]; then
        echo "no docs yet";
      fi;
    - if [ "${TEST_STYLE}" == "1" ]; then
        python -m flake8 .;
      fi;
    - if [ "${TEST_STYLE}" == "1" ]; then
        echo "Size difference ${SIZE_DIFF} kB";
        if git log --format=%B -n 2 | grep -q "\[size skip\]"; then
          echo "Skipping size test";
        else
          test ${SIZE_DIFF} -lt 100;
        fi;
      fi;

after_success:
    - echo SUCCESS!

after_failure:
    - echo FAIL!

after_script:
